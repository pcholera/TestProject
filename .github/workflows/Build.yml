name: Build

on: 
  push: 
    branches:
      - '**'
    tags:
      - 'v*.*.*'
env:
  devAppPool: ${{ secrets.DEVAPPPOOL }}
  devTargetLocation: ${{ secrets.DEVTARGETLOCATION }}

jobs:
  buildConfig:
    name: Get Build Config
    uses: ./.github/workflows/BuildConfig.yml

  build:
    name: Build Job

    needs: buildConfig
    runs-on: self-hosted

    env:
      projectName: ${{ needs.buildConfig.outputs.repositoryName }}"
      projectPath: ${{ needs.buildConfig.outputs.repositoryName }}\${{ needs.buildConfig.outputs.repositoryName }}.csproj

    steps:
    - uses: actions/checkout@v2

    - name: "Print Repo Name"
      run: echo "Repo Name = ${{ needs.buildConfig.outputs.repositoryName }}"

    - name: "Print Branch Type"
      run: echo "Branch Type = ${{ needs.buildConfig.outputs.branchType }}"

    - name: "Print Version Number"
      run: echo "Version = ${{ needs.buildConfig.outputs.buildVersion }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Ensure GitHub NuGet Source
      run: dotnet nuget add source https://nuget.pkg.github.com/pcholera/index.json -n github -u ${{ github.actor }}  -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

    - name: Build
      run: dotnet build ${{ env.projectPath }} --configuration Release

    - name: Publish
      run: dotnet publish ${{ env.projectPath }} --configuration Release --no-restore --output .\Publish /p:AssemblyVersion=${{ needs.buildConfig.outputs.buildVersion }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.projectName }} - ${{ needs.buildConfig.outputs.buildVersion }}
        path: .\Publish

    - name: Save Artifact Locally
      run: |
        Copy-Item -Path .\Publish -Destination ..\Publish\TestProject\${{ needs.buildConfig.outputs.buildVersion }} -recurse -Force

  deploy_to_dev:
    name: Deploy To Dev
    needs: [ build, buildConfig ]
    uses: ./.github/workflows/Deploy.yml
    with:
      appPoolName: ${{ env.devAppPool }}
      targetLocation: ${{ env.devTargetLocation }}
      buildVersion: ${{ needs.buildConfig.outputs.buildVersion }}